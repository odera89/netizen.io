<?php

/**
 * @package Janrain Capture
 *
 * Methods for inserting UI elements
 *
 */
class JanrainCaptureUi {
  private $name;

  /**
   * Sets up actions, initializes plugin name.
   *
   * @param string $name
   *   The plugin name to use as a namespace
   */
  function __construct($name) {
    $this->name = $name;
    if (!is_admin()) {
      add_action('wp_head', array(&$this, 'head'));
      add_action('wp_enqueue_scripts', array(&$this, 'registerScripts'));
      if (get_option($this->name . '_ui_native_links') != '0') {
        add_filter('loginout', array(&$this, 'loginout'));
        add_filter('logout_url', array(&$this, 'logout_url'), 10, 2);
        add_filter('admin_url', array(&$this, 'admin_url'), 10, 3);
      }
    }
  }

  /**
   * Adds javascript libraries to the page.
   */
  function registerScripts() {
    if (get_option($this->name . '_ui_colorbox') != '0')
      wp_enqueue_script('colorbox', WP_PLUGIN_URL . '/janrain-capture/colorbox/jquery.colorbox.js', array('jquery'));
    if (get_option($this->name . '_ui_capture_js') != '0')
      wp_enqueue_script($this->name . '_main_script', WP_PLUGIN_URL . '/janrain-capture/janrain_capture_ui.js');	
  }

  /**
   * Method bound to the wp_head action.
   */
  function head() {
    if (get_option($this->name . '_ui_colorbox') != '0')
      wp_enqueue_style('colorbox', WP_PLUGIN_URL . '/janrain-capture/colorbox/colorbox.css');
    $bp_js_path = get_option($this->name . '_bp_js_path');
    $bp_server_base_url = get_option($this->name . '_bp_server_base_url');
    $bp_bus_name = get_option($this->name . '_bp_bus_name');
    $sso_addr = get_option($this->name . '_sso_address');
    $capture_addr = get_option($this->name . '_ui_address') ? get_option($this->name . '_ui_address') : get_option($this->name . '_address');
    echo '<script type="text/javascript" src="' . esc_url('https://' . $capture_addr . '/cdn/javascripts/capture_client.js') . '"></script>';
    if ($bp_js_path)
      echo '<script type="text/javascript" src="' . esc_url($bp_js_path) . '"></script>';
    if ($bp_server_base_url && $bp_bus_name) {
      $bp_server_base_url = esc_url($bp_server_base_url);
      $bp_bus_name = JanrainCapture::sanitize($bp_bus_name);
      echo <<<BACKPLANE
<script type="text/javascript">
jQuery(function(){
  Backplane(CAPTURE.bp_ready);
    Backplane.init({
      serverBaseURL: "$bp_server_base_url",
      busName: "$bp_bus_name"
    });
});
</script>
BACKPLANE;
    }
    if ($sso_addr) {
      $client_id = get_option($this->name . '_client_id');
      $client_id = JanrainCapture::sanitize($client_id);
      $xdcomm = admin_url('admin-ajax.php') . '?action=' . $this->name . '_xdcomm';
      $redirect_uri = admin_url('admin-ajax.php') . '?action=' . $this->name . '_redirect_uri';
      $logout = wp_logout_url('/');
      $sso_addr = esc_url('https://' . $sso_addr);
      echo <<<SSO
<script type="text/javascript" src="$sso_addr/sso.js"></script>
<script type="text/javascript">
JANRAIN.SSO.CAPTURE.check_login({
  sso_server: "$sso_addr",
  client_id: "$client_id",
  redirect_uri: "$redirect_uri",
  logout_uri: "$logout",
  xd_receiver: "$xdcomm"
});
function janrain_capture_logout() {
  JANRAIN.SSO.CAPTURE.logout({
    sso_server: "$sso_addr",
    logout_uri: "$logout"
  });
}
</script>
SSO;
    }
    echo '<script type="text/javascript">
      if (typeof(ajaxurl) == "undefined") var ajaxurl = "' . admin_url('admin-ajax.php') . '";
</script>';
  }

  /**
   * Method bound to the loginout filter.
   *
   * @param string $link
   *   The Login/Logout link html string.
   *
   * @return string $link
   *   The html to output to the page.
   */
  function loginout($link) {
    if (!is_user_logged_in()) {
      $href = do_shortcode("[{$this->name} href_only='true']");
      $classes = "{$this->name}_anchor {$this->name}_signin";
      if (strpos($link, ' class='))
        $link = preg_replace("/(\sclass=[\"'][^\"']+)([\"'])/i", "$1 $classes$2", $link);
      else
        $link = str_replace("href=", "class=\"$classes\" href=", $link);
      $link = preg_replace("/(href=[\"'])[^\"']+([\"'])/i", "$1$href$2", $link);
    } else {
      $href = wp_logout_url($this->current_page_url());
      $link = preg_replace("/href=[\"'][^\"']+[\"']/i", "href=\"$href\"", $link);
    }
    return $link;
  }

  /**
   * Method bound to the logout_url filter.
   *
   * @param string $logout_url
   *   The logout url as generated by the wp_logout_url method.
   *
   * @param string $redirect
   *   The redirect string passed in to the function.
   *
   * @return string $logout_url
   *   The modified logout URL.
   */
  function logout_url($logout_url, $redirect) {
    if (empty($redirect))
      return wp_logout_url($this->current_page_url());
    else
      return $logout_url;
  }

  /**
   * Method bound to the admin_url filter.
   *
   * @param string $url
   *   The URL generated by the admin_url method.
   *
   * @param string $path
   *   The path passed in to the admin_url method.
   *
   * @param int $blog_id
   *   The ID of the current blog.
   *
   * @return string $link
   *   The html to output to the page.
   */
  function admin_url($url, $path, $blog_id) {
    $current_user = wp_get_current_user();
    if ($path == 'profile.php' && $current_user->ID)
      return admin_url('admin-ajax.php') . "?action=" . $this->name . "_profile";
    else
      return $url;
  }

  /**
   * Returns the current page URL
   *
   * @return string
   *   Page URL
   */
  function current_page_url() {
    $pageURL = 'http';
    if ( isset($_SERVER["HTTPS"]) ) {
      if ($_SERVER["HTTPS"] == "on") $pageURL .= "s";
    }
    $pageURL .= "://";
    if ($_SERVER["SERVER_PORT"] != "80") {
      $pageURL .= $_SERVER["SERVER_NAME"].":".$_SERVER["SERVER_PORT"].$_SERVER["REQUEST_URI"];
    } else {
      $pageURL .= $_SERVER["SERVER_NAME"].$_SERVER["REQUEST_URI"];
    }
    return $pageURL;
  }
}

